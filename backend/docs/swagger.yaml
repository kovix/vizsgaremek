openapi: 3.0.0
info:
  version: 0.0.1
  title: Setalolap Application
  description: API for setalolap.
servers:
  - url: http://localhost:3000
paths:
  /examination:
    get:
      description: Return list of examinations
      security:
        - bearerAuth: []
      tags:
        - Examinations
      responses:
        '200':
          description: List of examinations fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Examination'
        '401':
          description: Unathorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      description: Creates new examation
      security:
        - bearerAuth: []
      tags:
        - Examinations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Examination'
      responses:
        '201':
          description: Examation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Examination'
        '400':
          description: Bad request. Some params probably missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /examination/{id}:
      get:
        description: Returns single examination
        security:
          - bearerAuth: []
        tags:
          - Examinations
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Examination found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Examination'
          '404':
            description: Examination not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      patch:
        description: Update az examination
        security:
          - bearerAuth: []
        tags:
          - Examinations
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Examination'
        responses:
          '200':
            description: Examination updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Examination'
          '400':
            description: Bad request, mandatory parameter missing
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '404':
            description: Record not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      delete:
        description: Delete examination
        security:
          - bearerAuth: []
        tags:
          - Examinations
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Examination deleted
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      $ref: '#/components/schemas/Examination'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /examinationgroup:
    get:
      description: Return list of examination Groups
      security:
        - bearerAuth: []
      tags:
        - Examination Groups
      responses:
        '200':
          description: List of examination groups fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExaminationGroup'
        '401':
          description: Unathorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      description: Creates new examation group
      security:
        - bearerAuth: []
      tags:
        - Examination Groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Examation group created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Examination'
        '400':
          description: Bad request. Some params probably missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /examinationgroup/{id}:
      get:
        description: Returns single examination group
        security:
          - bearerAuth: []
        tags:
          - Examination Groups
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Examination group found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ExaminationGroup'
          '404':
            description: Examination not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      patch:
        description: Update an examination
        security:
          - bearerAuth: []
        tags:
          - Examination Groups
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
        responses:
          '200':
            description: Examinationgroup updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ExaminationGroup'
          '400':
            description: Bad request, mandatory parameter missing
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '404':
            description: Record not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      delete:
        description: Delete examination group
        security:
          - bearerAuth: []
        tags:
          - Examination Groups
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Examination group deleted
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      $ref: '#/components/schemas/ExaminationGroup'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /examinationgroup/addexaminations/{id}:
      patch:
        description: Add new examinations to existing group
        security:
          - bearerAuth: []
        tags:
          - Examination Groups
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          description: Array of valid Examination _ids
          required: true
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        responses:
          '200':
            description: Examinations added successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ExaminationGroup'
          '400':
            description: Bad request, mandatory parameter missing, or duplicated examination in group.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '404':
            description: Group not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /examinationgroup/savereorder/{id}:
      patch:
        description: Save new examination order in group
        security:
          - bearerAuth: []
        tags:
          - Examination Groups
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          description: Array of valid Examination _ids in order
          required: true
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        responses:
          '200':
            description: Examinations reordered successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ExaminationGroup'
          '400':
            description: Bad request, mandatory parameter missing.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '404':
            description: Group not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /user:
    get:
      description: Return list of valid users
      security:
        - bearerAuth: []
      tags:
        - User management
      responses:
        '200':
          description: List of valid users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Unathorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      description: Creates new user
      security:
        - bearerAuth: []
      tags:
        - User management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Examination'
        '400':
          description: Bad request. Some params probably missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/{id}:
      get:
        description: Returns single user
        security:
          - bearerAuth: []
        tags:
          - User management
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: User found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          '404':
            description: User not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      patch:
        description: Update a user
        security:
          - bearerAuth: []
        tags:
          - User management
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        responses:
          '200':
            description: User updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          '400':
            description: Bad request, mandatory parameter missing
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '404':
            description: Record not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      delete:
        description: Delete user
        security:
          - bearerAuth: []
        tags:
          - User management
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: User deleted
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      $ref: '#/components/schemas/User'
          '400':
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'


  /patient:
    get:
      description: Return list of patients
      security:
        - bearerAuth: []
      tags:
        - Patients
      responses:
        '200':
          description: List of patients fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patient'
        '401':
          description: Unathorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      description: Creates new patient
      security:
        - bearerAuth: []
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '201':
          description: Patient created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '400':
          description: Bad request. Some params probably missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /patient/{id}:
      get:
        description: Returns single patient
        security:
          - bearerAuth: []
        tags:
          - Patients
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Patient found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Patient'
          '404':
            description: Patient not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      patch:
        description: Update a patient
        security:
          - bearerAuth: []
        tags:
          - Patients
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        responses:
          '200':
            description: Patient updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Patient'
          '400':
            description: Bad request, mandatory parameter missing
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '404':
            description: Record not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      delete:
        description: Delete Patient
        security:
          - bearerAuth: []
        tags:
          - Patients
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Patient deleted
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      $ref: '#/components/schemas/Patient'
          '404':
            description: Patient not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /consultation:
    get:
      description: Return list of consultations
      security:
        - bearerAuth: []
      tags:
        - Consultations
      responses:
        '200':
          description: List of consultations fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Consultation'
        '401':
          description: Unathorized
          content:
            text/plain:
              schema:
                type: string
                example: Unauthorized
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      description: Creates new consultation
      security:
        - bearerAuth: []
      tags:
        - Consultations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsultationBody'
                
      responses:
        '201':
          description: Consultation created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Consultation'
        '400':
          description: Bad request. Some params probably missing.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /consultation/{id}:
      get:
        description: Returns single consultation
        security:
          - bearerAuth: []
        tags:
          - Consultations
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Consultation found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Consultation'
          '404':
            description: Consultation not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      patch:
        description: Update a consultation
        security:
          - bearerAuth: []
        tags:
          - Consultations
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationBody'
        responses:
          '200':
            description: Consultation updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Consultation'
          '400':
            description: Bad request, mandatory parameter missing
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '404':
            description: Record not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      delete:
        description: Delete consultation
        security:
          - bearerAuth: []
        tags:
          - Consultations
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        responses:
          '200':
            description: Consultation deleted
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      $ref: '#/components/schemas/Consultation'
          '404':
            description: Consultation not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /consultation/{id}/addpatients:
      patch:
        description: Add patient(s) to consultation
        security:
          - bearerAuth: []
        tags:
          - Consultations
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          description: Array of valid Patient _ids
          required: true
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        responses:
          '200':
            description: Patients assigned successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Consultation'
          '400':
            description: Bad request, mandatory parameter missing.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '404':
            description: Group not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /consultation/{id}/updatePatient/{patientid}:
      patch:
        description: Modify patient data in consultation
        security:
          - bearerAuth: []
        tags:
          - Consultations
        parameters:
          - name: id
            in: path
            required: true
            schema:
              type: string
        requestBody:
          description: Patient detail body
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientDetail'
        responses:
          '200':
            description: Patient updated successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Consultation'
          '400':
            description: Bad request, mandatory parameter missing.
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '404':
            description: Group not found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '500':
            description: Internal server error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      description: Login and get token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userName:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Authentication failed, invalid password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/refresh:
    post:
      description: Refresh access token with refreshToken
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Refresh successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
        '403':
          description: Invalid refresh token, request rejected
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/logout:
    post:
      description: Logout and clear session
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - userName
        - firstName
        - lastName
        - email
        - password
        - role
        - deleted
      properties:
        userName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        confirmPassword:
          type: string
          description: Only used when creating user. Must match password.
        role:
          type: number
        deleted:
          type: boolean
          default: false
    Patient:
      type: object
      required:
        - firstName
        - lastName
        - patientID
        - createdBy
      properties:
        firstName:
          type: string
        lastName:
          type: string
        patientID:
          type: string
          pattern: ^$|^\d{3} \d{3} \d{3}$
        email:
          type: string
          pattern: ^$|^(([^<>()\[\]\.,;:\s@\"]+(\.[^<>()\[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$
        comment:
          type: string
        createdBy:
            oneOf:
              - type: string
              - $ref: '#/components/schemas/User'
    
    Examination:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        defaultTime:
          type: number
          default: 0
        createdBy:
          description: Output only, dropped when sending in body.
          oneOf:
            - type: string
            - $ref: '#/components/schemas/User'
        deleted:
          description: Output only, dropped when sending in body.
          type: boolean
        deletedby:
          description: Output only, dropped when sending in body.
          oneOf:
            - type: string
            - $ref: '#/components/schemas/User'
    ExaminationGroup:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        examinations:
          description: Output only, dropped when creating or updating.
          type: array
          items:
            type: object
            properties:
              order:
                type: number
              examination:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/Examination'        

    Log:
      type: object
      required:
        - user
        - eventText
      properties:
        user:
          oneOf:
            - type: string
            - $ref: '#/components/schemas/User'
        eventText:
          type: string
    
    ConsultationBody:
      type: object
      properties:
        name:
          type: string
        startDate:
          type: string
          example: 2022-01-01
        doctor:
          type: string
          example: valid user._id
        groupId:
          type: string
          example: valid examinationGrouo._id
          
    Consultation:
      type: object
      required:
        - name
        - startDate
        - doctor
        - groupId
      properties:
        name:
          type: string
        startDate:
          type: string
        doctor:
          oneOf:
            - type: string
            - $ref: '#/components/schemas/User'  
        groupId:
          oneOf:
            - type: string
            - $ref: '#/components/schemas/ExaminationGroup'
        examinations:
          type: array
          items:
            type: object
            properties:
              order:
                type: number
              examination:
                oneOf:
                  - type: string
                  - $ref: '#/components/schemas/Examination'            
        logEntries:
          type: array
          items:
            oneOf:
              - type: string
              - $ref: '#/components/schemas/Log'
        details:
          type: array
          items:
              $ref: '#/components/schemas/PatientDetail'
    
    PatientDetail:
      type: object
      required:
        - patient
        - lastUpdated
      properties:
        patient:
          oneOf:
            - type: string
            - $ref: '#/components/schemas/Patient'
        comment:
          type: string
        arrived:
          type: string
        leaved:
          type: string
        alert:
          type: number
          default: 0
        lastUpdated:
          type: string
        patientConsultations:
          type: array
          items:
            type: object
            required:
              - examinationID
            properties:
              examationID:
                type: string
              required:
                type: boolean
                default: true
              startedAt:
                type: string
              finishedAt:
                type: string
              callRequired:
                type: boolean
                default: false
    Error:
      type: object
      properties:
        hasError:
          type: boolean
        message:
          type: string